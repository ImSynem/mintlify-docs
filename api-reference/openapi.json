{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI Payvra",
    "description": "Payvra API",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://payvra.com"
    }
  ],
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "paths": {
    "/plants": {
      "get": {
        "description": "Returns all plants from the system that the user has access to",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Plant"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new plant in the store",
        "requestBody": {
          "description": "Plant to add to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPlant"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plant"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/plants/{id}": {
      "delete": {
        "description": "Deletes a single plant based on the ID supplied",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of plant to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Plant deleted",
            "content": {}
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    
    "/api/v1/currencies": {
      "post": {
        "summary": "Fetch supported cryptocurrencies",
        "description": "Returns a list of cryptocurrencies and networks supported by Payvra",
        "tags": [
          "Currencies"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved supported cryptocurrencies",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CryptoCurrency"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/exchange/pairs": {
      "post": {
        "summary": "Fetch available exchange pairs",
        "description": "Returns a list of available exchange pairs with their current rates and minimum amounts",
        "tags": ["Exchange"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Exchange pairs retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExchangePair"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/merchants/invoice/create": {
      "post": {
        "summary": "Create a payment invoice",
        "description": "Creates a new payment invoice for the authenticated merchant",
        "tags": ["Invoices"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentInvoiceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payment invoice created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInvoiceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/merchants/invoice/fetch": {
      "post": {
        "summary": "Fetch a payment invoice",
        "description": "Retrieves details of an existing payment invoice",
        "tags": ["Invoices"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FetchPaymentInvoiceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payment invoice retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInvoiceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/merchants/payout/create": {
      "post": {
        "summary": "Create a payout",
        "description": "Creates a new payout for the authenticated merchant",
        "tags": ["Payouts"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePayoutRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payout created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayoutResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/merchants/payout/fetch": {
      "post": {
        "summary": "Fetch a payout",
        "description": "Retrieves details of an existing payout",
        "tags": ["Payouts"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FetchPayoutRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payout retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayoutResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/merchants/whitelabel/create": {
      "post": {
        "summary": "Create a whitelabel payment invoice",
        "description": "Creates a new whitelabel payment invoice for the authenticated merchant with specific cryptocurrency and network",
        "tags": ["Invoices"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWhiteLabelRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Whitelabel payment invoice created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInvoiceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/merchants/exchange/create": {
      "post": {
        "summary": "Create a new exchange",
        "description": "Creates a new exchange between two cryptocurrencies for the authenticated merchant",
        "tags": ["Exchange"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateExchangeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Exchange created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExchangeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "Plant": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the plant",
            "type": "string"
          },
          "tag": {
            "description": "Tag to specify the type",
            "type": "string"
          }
        }
      },
      "NewPlant": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Plant"
          },
          {
            "required": [
              "id"
            ],
            "type": "object",
            "properties": {
              "id": {
                "description": "Identification number of the plant",
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "Error": {
        "required": [
          "error",
          "message"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      },

      "CryptoCurrency": {
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string",
            "description": "The symbol/ticker of the cryptocurrency"
          },
          "name": {
            "type": "string",
            "description": "The full name of the cryptocurrency"
          },
          "networks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Network"
            },
            "description": "Available networks for this cryptocurrency"
          }
        }
      },
      "Network": {
        "type": "object",
        "properties": {
          "network": {
            "type": "string",
            "description": "The network identifier"
          },
          "name": {
            "type": "string",
            "description": "The display name of the network"
          },
          "minConfirm": {
            "type": "integer",
            "description": "Minimum confirmations required",
            "nullable": true
          },
          "withdrawFee": {
            "type": "number",
            "format": "float",
            "description": "Fee for withdrawals",
            "nullable": true
          },
          "withdrawMin": {
            "type": "number",
            "format": "float",
            "description": "Minimum withdrawal amount",
            "nullable": true
          },
          "depositMin": {
            "type": "number",
            "format": "float",
            "description": "Minimum deposit amount",
            "nullable": true
          },
          "staticFixedFee": {
            "type": "number",
            "format": "float",
            "description": "Fixed fee amount",
            "nullable": true
          }
        }
      },
      "CreatePaymentInvoiceRequest": {
        "type": "object",
        "required": ["amount"],
        "properties": {
          "amount": {
            "type": "number",
            "description": "Payment amount",
            "minimum": 0
          },
          "amountCurrency": {
            "type": "string",
            "description": "Currency for the amount",
            "default": "USD"
          },
          "acceptedCoins": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of accepted cryptocurrency symbols"
          },
          "underPaidCover": {
            "type": "number",
            "minimum": 0,
            "maximum": 50,
            "multipleOf": 0.1,
            "description": "Percentage of underpayment to accept"
          },
          "feePaidByPayer": {
            "type": "boolean",
            "description": "Whether the fee is paid by the payer"
          },
          "lifeTime": {
            "type": "number",
            "minimum": 1,
            "maximum": 1440,
            "default": 1440,
            "description": "Invoice lifetime in minutes"
          },
          "returnUrl": {
            "type": "string",
            "format": "uri",
            "description": "URL to return to after payment"
          }
        }
      },
      "FetchPaymentInvoiceRequest": {
        "type": "object",
        "required": ["invoiceId"],
        "properties": {
          "invoiceId": {
            "type": "string",
            "description": "ID of the payment invoice to fetch"
          }
        }
      },
      "PaymentInvoiceResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "merchantId": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string",
            "format": "uri"
          },
          "status": {
            "type": "string",
            "enum": ["PENDING", "CONFIRMING", "UNDER_PAID", "PAID", "FAILED", "EXPIRED"]
          },
          "address": {
            "type": "string"
          },
          "txHash": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "amountCurrency": {
            "type": "string"
          },
          "rate": {
            "type": "number"
          },
          "payAmount": {
            "type": "number"
          },
          "cryptoCurrency": {
            "type": "object",
            "properties": {
              "symbol": {
                "type": "string"
              }
            }
          },
          "network": {
            "type": "object",
            "properties": {
              "network": {
                "type": "string"
              }
            }
          },
          "feePaidByPayer": {
            "type": "boolean"
          },
          "underPaidCover": {
            "type": "number"
          },
          "isWhiteLabel": {
            "type": "boolean"
          },
          "returnUrl": {
            "type": "string",
            "format": "uri"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreatePayoutRequest": {
        "type": "object",
        "required": ["currency", "network", "amount", "address"],
        "properties": {
          "currency": {
            "type": "string",
            "description": "Cryptocurrency symbol"
          },
          "network": {
            "type": "string",
            "description": "Network for the cryptocurrency"
          },
          "amount": {
            "type": "number",
            "description": "Amount to withdraw",
            "minimum": 0,
            "multipleOf": 0.00000001
          },
          "address": {
            "type": "string",
            "description": "Destination address for the payout"
          }
        }
      },
      "FetchPayoutRequest": {
        "type": "object",
        "required": ["payoutId"],
        "properties": {
          "payoutId": {
            "type": "string",
            "description": "ID of the payout to fetch"
          }
        }
      },
      "PayoutResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the payout"
          },
          "wallet": {
            "type": "object",
            "properties": {
              "merchantId": {
                "type": "string"
              },
              "currency": {
                "type": "object",
                "properties": {
                  "symbol": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "network": {
            "type": "object",
            "properties": {
              "network": {
                "type": "string"
              }
            }
          },
          "status": {
            "type": "string",
            "enum": ["PROCESSING", "CONFIRMING", "COMPLETED", "REJECTED"]
          },
          "address": {
            "type": "string"
          },
          "txHash": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateWhiteLabelRequest": {
        "type": "object",
        "required": ["amount", "payCurrency"],
        "properties": {
          "amount": {
            "type": "number",
            "description": "Amount for the payment invoice",
            "minimum": 0
          },
          "amountCurrency": {
            "type": "string",
            "description": "Currency of the amount",
            "default": "USD"
          },
          "underPaidCover": {
            "type": "number",
            "description": "Percentage of underpayment that will be accepted",
            "minimum": 0,
            "maximum": 50,
            "multipleOf": 0.1
          },
          "feePaidByPayer": {
            "type": "boolean",
            "description": "Whether the fee should be paid by the payer"
          },
          "lifeTime": {
            "type": "number",
            "description": "Invoice lifetime in minutes",
            "minimum": 1,
            "maximum": 1440,
            "default": 1440
          },
          "payCurrency": {
            "type": "string",
            "description": "Cryptocurrency symbol to be used for payment"
          },
          "network": {
            "type": "string",
            "description": "Network to be used for the cryptocurrency"
          }
        }
      },
      "ExchangePair": {
        "type": "object",
        "properties": {
          "minAmount": {
            "type": "number",
            "description": "Minimum amount for exchange"
          },
          "rate": {
            "type": "number",
            "description": "Current exchange rate"
          },
          "fromCurrency": {
            "type": "object",
            "properties": {
              "symbol": {
                "type": "string",
                "description": "Symbol of the source currency"
              }
            }
          },
          "toCurrency": {
            "type": "object",
            "properties": {
              "symbol": {
                "type": "string",
                "description": "Symbol of the target currency"
              }
            }
          }
        }
      },
      "CreateExchangeRequest": {
        "type": "object",
        "required": ["fromCurrency", "toCurrency", "amount"],
        "properties": {
          "fromCurrency": {
            "type": "string",
            "description": "Symbol of the source cryptocurrency"
          },
          "toCurrency": {
            "type": "string",
            "description": "Symbol of the target cryptocurrency"
          },
          "amount": {
            "type": "number",
            "description": "Amount to exchange from the source currency",
            "minimum": 0,
            "multipleOf": 0.00000001
          }
        }
      },
      "ExchangeResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILED"]
          },
          "fromWallet": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "object",
                "properties": {
                  "symbol": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "toWallet": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "object",
                "properties": {
                  "symbol": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "amount": {
            "type": "number"
          },
          "rate": {
            "type": "number"
          },
          "toAmount": {
            "type": "number"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  }
}